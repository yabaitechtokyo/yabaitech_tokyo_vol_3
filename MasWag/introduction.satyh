@require: itemize
@import: local

let introduction = '<
        +section {はじめに} <
            +dialog(
                [(None, {俺の名前は兼江 直次 (かなえ なおつぐ)。});
                (None, {埼玉県の川越市に在住の 17 歳の高校生だ。});
                (None, {今日から夏休み!});
                (None, {俺は億万長者になる為に AI の勉強に行く事にした。});
                (None,{　});
                (None,{　          });
                (None,{　          });                
                (None, {さて、どこに AI を勉強しに行くか…});
                (None, {やはり基本は山だろう!});
                (None, {山に行く!});
                (None,{　});
                (None,{　          });
                (None,{　          });                
                (None,{俺は山にやって来た。});
                (None,{すると…});
                (None,{　});
                (None,{　          });
                (None,{　          });                
                (None,{なぜか山で水着の女の子が現れた。});                
                (Some({女の子}),{「AIは好きですか？});
                (None,{　          });
                (None,{　          });
                (None,{　});
                (Some({直次}),{「好き。});
                (Some({女の子}),{「本当!?嬉しい…});
                (None,{女の子は喜びに大きく目を…});
                (None,{見開いた!});
                (Some({女の子}),{「AI は AI でも Automata Inference の方だがなぁぁーっ!});]);
                +p {
                  本章では正規言語を、神託を用いて正確に学習する手法 (automata learning, automata inference)のアルゴリズムについて説明します。
                  本章において、形式言語理論についての知識は仮定しませんが、素朴集合論や基本的なグラフ理論の知識や記号などは適宜使用します。
                  Automata learningではdetermistic Finite Automaton(決定的有限オートマトン、DFA)を学習するL\*アルゴリズム\cite([`journals/iandc/Angluin87`]);が良く知られています。
                  L\*アルゴリズムはある文字列 ${\word \in \Word} が学習したい言語 ${\Lg\subseteq \Word} に含まれているか (${\word \in \Lg})を質問する\emph{所属性質問} (membership query)と、学習した言語${\Lg'\subseteq \Word}が学習したい言語${\Lg\subseteq \Word}と等しいかどうかを質問する\emph{等価性質問} (equivalence query)の二種類の質問を繰り返すことで効率良く、学習したい言語を最小の状態数を持つオートマトンで学習します。
                  本章ではL\*アルゴリズムに加えて、等価性質問を用いないIDアルゴリズム\cite([`journals/iandc/Angluin81`]);と、DFAの代わりにnon-deterministic finite automaton(非決定的有限オートマトン、NFA)を学習するNL\*アルゴリズムも説明します。
                }                 
                +p {
                  本章の構成は以下のようになります。まず\ref-section(`sec:automata`);で形式言語やオートマトンの必要な定義を与えます。
                  本節では必要最低限の内容のみを扱います。より詳細は\cite([`HopcroftMU2003`]);などを参照してください。
                  \ref-section(`sec:id`);ではAngluinのIDアルゴリズムの紹介を行います。
                  \ref-section(`sec:lstar`);ではAngluinのL\*アルゴリズムについての紹介を行います。
                  \ref-section(`sec:nlstar`);DFAの代わりにNFAを学習するNL\*アルゴリズムについての説明を行います。
                  }
        +subsection{関連する項目} <
          +p {
          }
        >
+subsection{記法} <
+p {
  本章では実数の集合を${\mathbb{R}}、自然数の集合を${\mathbb{N}}を用いて表わします。また、真理値を${\mathrm{T}}と${\mathrm{F}}を用いて表わします。また、数式中で変数及び単なる文字としてラテン文字が表われますが、原則として変数として用いるときには${a}の様に斜体で、文字として用いるときは${\text!{a}}のように立体で表記します。
}
>
           +acknowledgement {
                本章の作成にあたり、川越が生んだ鬼才、高橋邦子先生に感謝します。
           }
        >
>