@import: local

let myhill-nerode = '<+subsection{Myhill-Nerodeの定理} <
+p {
  さて、L\*アルゴリズムの停止性を見るために、まずは正規言語の「有限らしさ」の特徴付けであるMyhill-Nerodeの定理を見ていきます。
}
+definition ?:({Myhill-Nerode同値関係}) ?:(`myhill-nerode同値関係`)
{
  有限文字集合${\alphabet}上の言語${L}について、\emph{Myhill-Nerode同値関係}${R_L\subseteq\alphabet^\ast\times\alphabet^\ast}を、次のように定義する。文字列${w,w'\in\alphabet^\ast}について${w R_L w'}が成り立つのは以下のときである。
}
+math(${
\forall w'' \in \alphabet^\ast. w \cdot w'' \in L \Leftrightarrow w'\cdot w'' \in L 
});
+theorem ?:({Myhill-Nerodeの定理}) ?:(`myhill-nerodeの定理`)
{
  有限文字集合${\alphabet}上の言語${L}について、${L}が正規言語であることの必要十分条件は、商集合${L/R_L}が有限集合となることである。
}
+p {
  \figure ?:(`fig:evenTree1`){a, bの個数が共に偶数の文字列の言語を認識する無限状態のオートマトンの例}<
     +image-frame{\insert-pdf-image(7cm)(path-to-root ^ `figs/evenTree.pdf`)(1);}
  >
  \figure ?:(`fig:evenTree2`){\ref-figure(`fig:evenTree1`);の無限状態オートマトンの状態aとabaを纏めたオートマトン}<
     +image-frame{\insert-pdf-image(7cm)(path-to-root ^ `figs/evenTreeMerged.pdf`)(1);}
  >
}
+p {
  文字列${w,w'}とMyhill-Nerode同値関係${R_L}について、${w R_L w'}が成り立つということの直観は、「これから与えられる未知の文字列${w''\in\alphabet^\ast}について${w\cdot w''\in L}が成り立つかどうかを調べたいときに、今まで読んだ文字が${w}であるか${w'}であるかは気にしなくて良い」ということになります。
このことについて木を使ってより詳しく見ていきます。
文字集合${\alphabet=\set{\text!{a,b}}}上の言語${L}として、「aとbの出現回数が共に偶数回」というものを考えます。
この言語を受理する(無限状態数の)オートマトンとして\ref-figure(`fig:evenTree1`);の木を考えます。
この木では各文字列${w\in\alphabet^\ast}について一つの状態が割り当てられ、${L}に含まれる文字列と対応する状態が受理状態となります。
ここで今回、例えば${\text!{b} R_L \text!{aba}}が成り立ちますが、これは木の上の性質としてみると、bを根としたときの部分木と、abaを根としたときの部分木が等しいということになります。
従って\ref-figure(`fig:evenTree2`);の(無限状態の)オートマトンのように、状態bと状態abaを一つにまとめても、受理言語は変わらないと言えます。
商集合${L/R_L}が有限集合、つまり右側のオートマトンのように状態を纏める操作を行うと最終的に有限状態のオートマトンになるとき、確かに${L\paren{\mathcal{A}}=L}が成り立つような、状態数${\abs{L/R_L}}のDFA${\mathcal{A}}を構成できるので${L}は正規言語になります。
また、${L}が正規言語である、つまり${L\paren{\mathcal{A}}=L}が成り立つようなDFA${\mathcal{A}}が存在するとき、文字列${w,w'}について${\delta\paren{q_0,w}=\delta\paren{q_0,w'}}が成り立つならば${w R_L w'}も成り立つので${L/R_L}は有限集合となります。
以上がMyhill-Nerodeの定理が成り立つ簡単な理由です。
さらに、正規言語${L}とDFA${\mathcal{A}}について、状態数が${\abs{L/R_L}}より少ない場合${\delta\paren{q_0,w}=\delta\paren{q_0,w'}}であって${w R_L w'}が成り立たないような文字列${w,w'\in\alphabet^\ast}が存在するので、次の系が成り立ちます。
}
+corollary ?:({状態数最小のDFA}) ?:(`状態数最小のdfa`)
{
  正規言語${L}について、状態数${\abs{L/R_L}}で${L}を認識するDFAが存在し、また、状態数${L/R_L}未満の任意のDFAは${L}を認識しない。
}
+p {
  さて、Myhill-Nerodeの定理の立場からL\*アルゴリズムの観察表を見ていきます。
まず、各${w\in P}について行ベクトル${T\[w,\text!{-}\]}は互いに異なる、つまり適宜末尾に文字列を加えたときの受理/非受理の関係が異なるので、${P}の要素数は${L/R_L}の要素数以下になり、${L}が正規言語であるとならば上限が存在します。
各${P'}の要素は${P}の要素に一文字付け加えたものであるので、${\abs{P'}\leq\abs{P}\times\abs{\alphabet}}となります。
また、${S}に添字${w'}を追加する際は${w'}を追加することで新たに食い違うような${w'}のみを追加する、つまり各${w\in S}について${T\[u,w\]=T\[u',w\]}であるが${T\[u,w'\]\neq T\[u',w'\]}である様な${u,u' \in P\cup P'}が存在するときのみ${w'}を${S}に追加します。
従って、${\abs{S}\leq \abs{L/R_L}\times \paren{1+ \abs{\alphabet}}}も成立します。
更に観察表を閉じる際及び等価性質問の結果反例が返って来た際には${P}と${S}の大きさが1以上増えます。
以上よりL\*アルゴリズムは${L}が正規言語であれば常に停止し、${L\paren{\mathcal{A}}=L}を充たすDFA${\mathcal{A}}を返することがわかります。
また、L\*アルゴリズムが生成するDFAの状態数は${\abs{P}}ですが、${L\paren{\mathcal{A}}=L}を充たす任意のDFAの状態数は${L/R_L}以下であることから、${\mathcal{A}}は${L\paren{\mathcal{A}}=L}を充たす状態数が最小のDFAであることもわかります。
}
>>